var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.6","fields":["title","body"],"fieldVectors":[["title/controllers/AppController.html",[0,1.018,1,1.407]],["body/controllers/AppController.html",[0,1.322,1,1.827,2,1.329,3,0.693,4,0.693,5,0.582,6,1.916,7,0.693,8,1.827,9,2.088,10,3.244,11,3.244,12,2.173,13,0.062,14,3.337,15,1.551,16,2.427,17,1.827,18,2.173,19,3.337,20,2.427,21,1.827,22,0.953,23,0.693,24,1.773,25,1.916,26,0.693,27,0.391,28,1.916,29,1.58,30,1.827,31,2.427,32,0.03,33,0.041,34,0.03]],["title/modules/AppModule.html",[35,0.616,36,1.407]],["body/modules/AppModule.html",[1,1.414,3,0.737,4,0.737,5,0.619,13,0.061,22,1.203,23,0.737,24,1.2,25,2.039,26,0.737,27,0.416,32,0.032,33,0.043,34,0.032,35,0.944,36,2.482,37,1.022,38,1.2,39,1.681,40,1.681,41,1.2,42,1.414,43,1.414,44,2.039,45,2.039,46,2.107,47,2.266,48,1.681,49,1.414,50,2.582,51,2.749,52,2.582,53,2.582,54,2.582]],["title/injectables/AppService.html",[24,1.195,55,1.195]],["body/injectables/AppService.html",[3,0.851,4,0.851,5,0.714,7,0.851,8,2.094,13,0.06,15,1.385,17,1.631,21,2.094,22,0.851,23,0.851,24,1.778,26,0.851,27,0.48,30,1.631,32,0.037,33,0.047,34,0.037,55,1.778,56,1.94,57,2.353,58,3.52,59,2.98,60,2.353,61,2.98]],["title/modules/DatabaseModule.html",[35,0.616,62,1.195]],["body/modules/DatabaseModule.html",[3,0.905,4,0.905,5,0.76,13,0.061,22,1.136,23,0.905,26,0.905,27,0.511,32,0.039,33,0.049,34,0.039,35,0.954,37,1.256,42,1.736,43,1.736,62,1.85,63,3.171,64,2.831,65,3.171]],["title/classes/User.html",[27,0.414,66,1.195]],["body/classes/User.html",[3,0.47,4,0.47,5,0.394,7,0.47,12,2.839,13,0.061,15,2.027,21,2.564,22,0.47,26,0.47,27,0.265,32,0.02,33,0.031,34,0.02,66,1.169,67,1.646,68,1.299,69,2.516,70,3.055,71,3.055,72,1.989,73,3.055,74,1.672,75,2.412,76,3.055,77,3.055,78,3.055,79,2.412,80,2.027,81,4.684,82,1.646,83,1.646,84,2.701,85,3.055,86,1.646,87,1.646,88,1.646,89,2.516,90,1.646,91,1.646,92,1.646,93,1.646,94,1.646,95,1.987,96,1.646,97,2.516,98,1.071,99,1.646]],["title/controllers/UsersController.html",[0,1.018,100,1.407]],["body/controllers/UsersController.html",[0,1.05,2,0.965,3,0.503,4,0.503,5,0.423,7,0.503,8,1.451,9,1.744,11,2.798,12,2.074,13,0.062,15,1.481,17,1.744,18,1.726,21,1.451,22,1.012,23,0.503,26,0.503,27,0.284,28,1.392,29,1.148,30,1.744,32,0.039,33,0.033,34,0.022,58,2.798,60,1.392,66,0.819,72,1.726,74,0.965,80,0.819,84,2.516,95,1.392,100,1.451,101,1.392,102,2.651,103,2.651,104,1.763,105,2.651,106,1.763,107,1.763,108,3.799,109,3.543,110,2.651,111,1.763,112,1.392,113,1.392,114,1.392,115,1.763,116,2.651,117,1.262,118,1.392,119,1.392,120,1.148,121,1.763,122,1.392,123,1.763,124,1.763,125,1.148,126,1.763,127,1.763,128,1.763,129,1.392,130,1.763,131,1.763,132,2.651,133,1.763]],["title/modules/UsersModule.html",[35,0.616,46,1.195]],["body/modules/UsersModule.html",[2,1.755,3,0.654,4,0.654,5,0.549,13,0.061,22,1.204,23,0.654,26,0.654,27,0.369,32,0.028,33,0.039,34,0.028,35,0.886,37,0.907,38,1.064,39,1.49,40,1.49,41,1.064,42,2.025,43,1.253,46,2.128,47,2.086,48,1.49,49,1.253,51,2.531,62,2.031,100,2.025,117,1.731,118,1.808,134,1.808,135,1.808,136,1.808,137,2.289,138,2.289,139,2.086,140,2.289,141,2.289]],["title/injectables/UsersService.html",[55,1.195,117,1.018]],["body/injectables/UsersService.html",[3,0.607,4,0.607,5,0.509,7,0.607,8,1.665,9,2.335,10,3.06,13,0.061,15,1.65,17,1.665,18,2.523,22,1.014,23,0.607,26,0.607,27,0.342,29,1.384,30,1.665,32,0.026,33,0.037,34,0.026,55,1.413,56,1.384,66,0.988,72,1.979,74,1.665,80,0.988,98,1.384,112,2.401,113,2.401,114,1.678,117,1.204,119,1.678,125,1.979,142,1.678,143,3.041,144,3.041,145,2.125,146,3.06,147,2.125,148,3.041,149,2.125,150,2.125,151,2.125,152,1.678,153,2.125,154,2.125,155,2.125,156,2.125,157,2.125,158,2.125]],["title/coverage.html",[159,2.259]],["body/coverage.html",[0,1.322,1,1.329,5,0.582,6,1.916,13,0.06,24,1.128,27,0.391,32,0.03,33,0.041,34,0.03,35,0.582,41,1.128,55,1.551,57,1.916,64,1.58,66,1.128,68,1.916,80,1.128,100,1.329,101,1.916,117,0.961,129,1.916,139,1.58,142,1.916,159,1.58,160,1.58,161,2.427,162,2.427,163,1.916,164,3.337,165,1.916,166,4.768,167,4.307,168,2.427,169,3.337,170,2.427,171,2.173,172,3.814,173,1.916,174,1.916,175,2.427,176,2.427,177,2.427]],["title/dependencies.html",[38,1.432,178,2.164]],["body/dependencies.html",[13,0.062,23,0.851,32,0.037,33,0.047,34,0.037,38,1.385,98,1.94,120,2.49,179,4.225,180,2.98,181,2.98,182,2.98,183,2.98,184,2.353,185,2.98,186,2.98,187,2.98,188,2.98,189,2.98,190,2.98,191,2.98,192,2.98,193,2.98,194,2.98,195,2.98,196,2.98]],["title/miscellaneous/functions.html",[197,1.185,198,2.432]],["body/miscellaneous/functions.html",[7,0.998,13,0.052,32,0.043,33,0.052,34,0.043,41,2.111,163,2.76,165,3.586,171,2.275,197,1.913,198,2.76,199,2.76,200,3.495]],["title/index.html",[7,0.618,201,1.709,202,1.709]],["body/index.html",[0,1.384,13,0.061,32,0.025,33,0.037,34,0.025,74,1.913,122,2.759,146,1.631,159,1.345,160,1.345,203,2.066,204,2.066,205,2.98,206,2.066,207,2.066,208,2.066,209,2.066,210,2.066,211,2.066,212,2.066,213,2.066,214,2.066,215,2.066,216,2.066,217,2.066,218,2.066,219,2.066,220,2.066,221,2.066,222,2.066,223,2.066,224,4.355,225,2.066,226,2.066,227,2.066,228,4.225,229,2.066,230,2.066,231,2.98,232,2.066,233,2.066,234,2.066,235,2.98,236,3.495,237,3.495,238,2.066,239,2.066,240,2.066,241,2.066,242,2.066,243,1.631,244,2.066,245,3.495,246,2.066,247,2.98,248,2.066,249,2.066,250,2.066]],["title/license.html",[201,1.709,202,1.709,251,1.709]],["body/license.html",[13,0.038,32,0.026,33,0.038,34,0.026,49,1.175,120,1.397,160,1.397,251,1.694,252,2.146,253,3.569,254,2.146,255,2.146,256,2.146,257,2.146,258,3.062,259,2.146,260,2.146,261,2.146,262,2.146,263,2.146,264,2.146,265,3.062,266,4.583,267,2.146,268,2.146,269,2.146,270,3.569,271,2.146,272,3.062,273,2.146,274,2.146,275,3.062,276,2.146,277,2.146,278,2.146,279,2.146,280,2.146,281,2.146,282,2.146,283,3.062,284,2.146,285,2.146,286,2.146,287,2.146,288,2.146,289,2.146,290,2.146,291,3.062,292,3.062,293,2.146,294,2.146,295,2.146,296,2.146,297,2.146,298,2.146,299,2.146,300,2.146,301,2.146,302,2.146,303,2.146,304,2.146,305,2.146,306,2.146,307,2.146,308,2.146,309,2.146,310,2.146,311,2.146,312,2.146,313,2.146,314,2.146,315,2.146,316,2.146,317,2.146,318,2.146,319,2.146,320,1.694,321,2.146]],["title/modules.html",[37,1.374]],["body/modules.html",[13,0.051,32,0.042,33,0.051,34,0.042,36,1.884,37,1.363,46,1.599,62,1.599,322,4.185,323,4.185,324,4.185,325,4.511,326,3.441,327,3.441]],["title/overview.html",[328,2.74]],["body/overview.html",[2,1.529,13,0.056,27,0.45,32,0.034,33,0.045,34,0.034,35,0.669,36,2.381,37,1.106,38,1.298,39,1.818,40,1.818,41,1.298,42,1.529,43,1.529,44,2.205,45,2.205,46,2.196,47,2.388,48,1.818,49,1.529,56,1.818,62,1.904,117,1.622,134,2.205,135,2.205,136,2.205,328,2.205,329,2.793,330,3.668,331,2.793]],["title/miscellaneous/variables.html",[197,1.185,332,2.432]],["body/miscellaneous/variables.html",[7,0.671,9,1.287,13,0.062,32,0.029,33,0.04,34,0.029,35,0.782,64,2.125,75,1.856,79,1.856,80,1.883,125,1.53,139,2.125,152,1.856,171,1.53,173,1.856,174,1.856,184,1.856,197,1.287,199,1.856,243,1.856,320,2.577,332,1.856,333,2.35,334,2.35,335,3.264,336,3.264,337,3.264,338,3.264,339,3.264,340,2.35,341,2.35,342,2.35,343,2.35,344,3.75,345,2.35,346,2.35,347,2.35,348,2.35,349,2.35,350,2.35,351,2.35,352,2.35]]],"invertedIndex":[["",{"_index":13,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/DatabaseModule.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":166,"title":{},"body":{"coverage.html":{}}}],["0.1.12",{"_index":188,"title":{},"body":{"dependencies.html":{}}}],["0.2.18",{"_index":196,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":167,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":170,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":175,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":168,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":169,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":331,"title":{},"body":{"overview.html":{}}}],["10",{"_index":158,"title":{},"body":{"injectables/UsersService.html":{}}}],["2",{"_index":330,"title":{},"body":{"overview.html":{}}}],["2.17.1",{"_index":185,"title":{},"body":{"dependencies.html":{}}}],["2.6.2",{"_index":190,"title":{},"body":{"dependencies.html":{}}}],["2019",{"_index":255,"title":{},"body":{"license.html":{}}}],["3",{"_index":329,"title":{},"body":{"overview.html":{}}}],["3.1.0",{"_index":183,"title":{},"body":{"dependencies.html":{}}}],["3306",{"_index":343,"title":{},"body":{"miscellaneous/variables.html":{}}}],["4.0.7",{"_index":195,"title":{},"body":{"dependencies.html":{}}}],["500",{"_index":95,"title":{},"body":{"classes/User.html":{},"controllers/UsersController.html":{}}}],["6.3.3",{"_index":192,"title":{},"body":{"dependencies.html":{}}}],["6.5.2",{"_index":179,"title":{},"body":{"dependencies.html":{}}}],["8081",{"_index":244,"title":{},"body":{"index.html":{}}}],["__dirname",{"_index":347,"title":{},"body":{"miscellaneous/variables.html":{}}}],["above",{"_index":290,"title":{},"body":{"license.html":{}}}],["action",{"_index":315,"title":{},"body":{"license.html":{}}}],["add",{"_index":235,"title":{},"body":{"index.html":{}}}],["add_by",{"_index":70,"title":{},"body":{"classes/User.html":{}}}],["and/or",{"_index":281,"title":{},"body":{"license.html":{}}}],["angular",{"_index":214,"title":{},"body":{"index.html":{}}}],["app",{"_index":226,"title":{},"body":{"index.html":{}}}],["appcontroller",{"_index":1,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["applications",{"_index":211,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":36,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":24,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{}}}],["arising",{"_index":319,"title":{},"body":{"license.html":{}}}],["associated",{"_index":267,"title":{},"body":{"license.html":{}}}],["async",{"_index":9,"title":{},"body":{"controllers/AppController.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["authors",{"_index":308,"title":{},"body":{"license.html":{}}}],["available",{"_index":327,"title":{},"body":{"modules.html":{}}}],["await",{"_index":125,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["bootstrap",{"_index":41,"title":{},"body":{"modules/AppModule.html":{},"modules/UsersModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["browse",{"_index":325,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":322,"title":{},"body":{"modules.html":{}}}],["building",{"_index":206,"title":{},"body":{"index.html":{}}}],["c",{"_index":254,"title":{},"body":{"license.html":{}}}],["charge",{"_index":262,"title":{},"body":{"license.html":{}}}],["claim",{"_index":311,"title":{},"body":{"license.html":{}}}],["class",{"_index":27,"title":{"classes/User.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/DatabaseModule.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"overview.html":{}}}],["classes",{"_index":67,"title":{},"body":{"classes/User.html":{}}}],["clone",{"_index":220,"title":{},"body":{"index.html":{}}}],["cluster_appmodule",{"_index":44,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":45,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_usersmodule",{"_index":134,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_imports",{"_index":135,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_providers",{"_index":136,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["column",{"_index":81,"title":{},"body":{"classes/User.html":{}}}],["column('text",{"_index":89,"title":{},"body":{"classes/User.html":{}}}],["column({length",{"_index":94,"title":{},"body":{"classes/User.html":{}}}],["compodoc",{"_index":239,"title":{},"body":{"index.html":{}}}],["conditions",{"_index":289,"title":{},"body":{"license.html":{}}}],["connection",{"_index":320,"title":{},"body":{"license.html":{},"miscellaneous/variables.html":{}}}],["connection.getrepository(user",{"_index":352,"title":{},"body":{"miscellaneous/variables.html":{}}}],["const",{"_index":124,"title":{},"body":{"controllers/UsersController.html":{}}}],["constructor",{"_index":144,"title":{},"body":{"injectables/UsersService.html":{}}}],["constructor(private",{"_index":28,"title":{},"body":{"controllers/AppController.html":{},"controllers/UsersController.html":{}}}],["constructor(userrepository",{"_index":145,"title":{},"body":{"injectables/UsersService.html":{}}}],["contract",{"_index":316,"title":{},"body":{"license.html":{}}}],["controller",{"_index":0,"title":{"controllers/AppController.html":{},"controllers/UsersController.html":{}},"body":{"controllers/AppController.html":{},"controllers/UsersController.html":{},"coverage.html":{},"index.html":{}}}],["controller/app.controller",{"_index":53,"title":{},"body":{"modules/AppModule.html":{}}}],["controller/users/users.controller",{"_index":141,"title":{},"body":{"modules/UsersModule.html":{}}}],["controllers",{"_index":2,"title":{},"body":{"controllers/AppController.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["copies",{"_index":283,"title":{},"body":{"license.html":{}}}],["copy",{"_index":265,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":253,"title":{},"body":{"license.html":{}}}],["coverage",{"_index":159,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["createconnection",{"_index":340,"title":{},"body":{"miscellaneous/variables.html":{}}}],["created_time",{"_index":71,"title":{},"body":{"classes/User.html":{}}}],["damages",{"_index":312,"title":{},"body":{"license.html":{}}}],["danny",{"_index":257,"title":{},"body":{"license.html":{}}}],["database",{"_index":345,"title":{},"body":{"miscellaneous/variables.html":{}}}],["database/database.module",{"_index":138,"title":{},"body":{"modules/UsersModule.html":{}}}],["database_connection",{"_index":338,"title":{},"body":{"miscellaneous/variables.html":{}}}],["databasemodule",{"_index":62,"title":{"modules/DatabaseModule.html":{}},"body":{"modules/DatabaseModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["databaseproviders",{"_index":64,"title":{},"body":{"modules/DatabaseModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["deal",{"_index":269,"title":{},"body":{"license.html":{}}}],["dealings",{"_index":321,"title":{},"body":{"license.html":{}}}],["declarations",{"_index":40,"title":{},"body":{"modules/AppModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["decorators",{"_index":12,"title":{},"body":{"controllers/AppController.html":{},"classes/User.html":{},"controllers/UsersController.html":{}}}],["default",{"_index":335,"title":{},"body":{"miscellaneous/variables.html":{}}}],["defined",{"_index":15,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["dependencies",{"_index":38,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/UsersModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":215,"title":{},"body":{"index.html":{}}}],["development",{"_index":227,"title":{},"body":{"index.html":{}}}],["distribute",{"_index":279,"title":{},"body":{"license.html":{}}}],["documentation",{"_index":160,"title":{},"body":{"coverage.html":{},"index.html":{},"license.html":{}}}],["e2e",{"_index":248,"title":{},"body":{"index.html":{}}}],["efficient",{"_index":207,"title":{},"body":{"index.html":{}}}],["entities",{"_index":346,"title":{},"body":{"miscellaneous/variables.html":{}}}],["entity",{"_index":97,"title":{},"body":{"classes/User.html":{}}}],["entity/user.entity",{"_index":119,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["entity{.ts,.js",{"_index":348,"title":{},"body":{"miscellaneous/variables.html":{}}}],["error",{"_index":132,"title":{},"body":{"controllers/UsersController.html":{}}}],["event",{"_index":307,"title":{},"body":{"license.html":{}}}],["export",{"_index":26,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/DatabaseModule.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["exports",{"_index":43,"title":{},"body":{"modules/AppModule.html":{},"modules/DatabaseModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["express",{"_index":120,"title":{},"body":{"controllers/UsersController.html":{},"dependencies.html":{},"license.html":{}}}],["file",{"_index":5,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/DatabaseModule.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["files",{"_index":268,"title":{},"body":{"license.html":{}}}],["findall",{"_index":10,"title":{},"body":{"controllers/AppController.html":{},"injectables/UsersService.html":{}}}],["finduserbyid",{"_index":143,"title":{},"body":{"injectables/UsersService.html":{}}}],["finduserbyid(@param('id",{"_index":156,"title":{},"body":{"injectables/UsersService.html":{}}}],["finduserbyid(id",{"_index":150,"title":{},"body":{"injectables/UsersService.html":{}}}],["fitness",{"_index":303,"title":{},"body":{"license.html":{}}}],["following",{"_index":288,"title":{},"body":{"license.html":{}}}],["framework",{"_index":205,"title":{},"body":{"index.html":{}}}],["free",{"_index":261,"title":{},"body":{"license.html":{}}}],["function",{"_index":164,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":198,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["furnished",{"_index":286,"title":{},"body":{"license.html":{}}}],["genapi",{"_index":165,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["generate",{"_index":236,"title":{},"body":{"index.html":{}}}],["get('hello",{"_index":103,"title":{},"body":{"controllers/UsersController.html":{}}}],["get('query",{"_index":14,"title":{},"body":{"controllers/AppController.html":{}}}],["get('test",{"_index":19,"title":{},"body":{"controllers/AppController.html":{}}}],["get('user/:id",{"_index":110,"title":{},"body":{"controllers/UsersController.html":{}}}],["get('users",{"_index":105,"title":{},"body":{"controllers/UsersController.html":{}}}],["gethello",{"_index":58,"title":{},"body":{"injectables/AppService.html":{},"controllers/UsersController.html":{}}}],["gethelloall",{"_index":11,"title":{},"body":{"controllers/AppController.html":{},"controllers/UsersController.html":{}}}],["getting",{"_index":201,"title":{"index.html":{},"license.html":{}},"body":{}}],["getuserbyid",{"_index":102,"title":{},"body":{"controllers/UsersController.html":{}}}],["getuserbyid(@param('id",{"_index":123,"title":{},"body":{"controllers/UsersController.html":{}}}],["getuserbyid(id",{"_index":107,"title":{},"body":{"controllers/UsersController.html":{}}}],["git",{"_index":219,"title":{},"body":{"index.html":{}}}],["granted",{"_index":260,"title":{},"body":{"license.html":{}}}],["graph",{"_index":326,"title":{},"body":{"modules.html":{}}}],["heavily",{"_index":212,"title":{},"body":{"index.html":{}}}],["hello",{"_index":60,"title":{},"body":{"injectables/AppService.html":{},"controllers/UsersController.html":{}}}],["hereby",{"_index":259,"title":{},"body":{"license.html":{}}}],["holders",{"_index":309,"title":{},"body":{"license.html":{}}}],["host",{"_index":341,"title":{},"body":{"miscellaneous/variables.html":{}}}],["httpexception",{"_index":116,"title":{},"body":{"controllers/UsersController.html":{}}}],["httpmodule",{"_index":52,"title":{},"body":{"modules/AppModule.html":{}}}],["https://github.com/m1911star/nest",{"_index":221,"title":{},"body":{"index.html":{}}}],["httpstatus",{"_index":115,"title":{},"body":{"controllers/UsersController.html":{}}}],["httpstatus.internal_server_error",{"_index":131,"title":{},"body":{"controllers/UsersController.html":{}}}],["id",{"_index":72,"title":{},"body":{"classes/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["identifier",{"_index":161,"title":{},"body":{"coverage.html":{}}}],["implied",{"_index":299,"title":{},"body":{"license.html":{}}}],["import",{"_index":22,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/DatabaseModule.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["imports",{"_index":51,"title":{},"body":{"modules/AppModule.html":{},"modules/UsersModule.html":{}}}],["included",{"_index":293,"title":{},"body":{"license.html":{}}}],["including",{"_index":272,"title":{},"body":{"license.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/DatabaseModule.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["inject",{"_index":152,"title":{},"body":{"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["inject('user_repository",{"_index":153,"title":{},"body":{"injectables/UsersService.html":{}}}],["injectable",{"_index":55,"title":{"injectables/AppService.html":{},"injectables/UsersService.html":{}},"body":{"injectables/AppService.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["injectables",{"_index":56,"title":{},"body":{"injectables/AppService.html":{},"injectables/UsersService.html":{},"overview.html":{}}}],["inspired",{"_index":213,"title":{},"body":{"index.html":{}}}],["installation",{"_index":218,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":225,"title":{},"body":{"index.html":{}}}],["internal",{"_index":133,"title":{},"body":{"controllers/UsersController.html":{}}}],["kind",{"_index":298,"title":{},"body":{"license.html":{}}}],["lee",{"_index":256,"title":{},"body":{"license.html":{}}}],["legend",{"_index":39,"title":{},"body":{"modules/AppModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["length",{"_index":99,"title":{},"body":{"classes/User.html":{}}}],["liability",{"_index":313,"title":{},"body":{"license.html":{}}}],["liable",{"_index":310,"title":{},"body":{"license.html":{}}}],["license",{"_index":251,"title":{"license.html":{}},"body":{"license.html":{}}}],["limitation",{"_index":273,"title":{},"body":{"license.html":{}}}],["limited",{"_index":300,"title":{},"body":{"license.html":{}}}],["localhost",{"_index":342,"title":{},"body":{"miscellaneous/variables.html":{}}}],["matching",{"_index":33,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/DatabaseModule.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["merchantability",{"_index":302,"title":{},"body":{"license.html":{}}}],["merge",{"_index":277,"title":{},"body":{"license.html":{}}}],["metadata",{"_index":187,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":8,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["miscellaneous",{"_index":197,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":252,"title":{},"body":{"license.html":{}}}],["mobile",{"_index":73,"title":{},"body":{"classes/User.html":{}}}],["mode",{"_index":231,"title":{},"body":{"index.html":{}}}],["modify",{"_index":276,"title":{},"body":{"license.html":{}}}],["module",{"_index":35,"title":{"modules/AppModule.html":{},"modules/DatabaseModule.html":{},"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/DatabaseModule.html":{},"modules/UsersModule.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["modules",{"_index":37,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/DatabaseModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["modules/users/users.module",{"_index":54,"title":{},"body":{"modules/AppModule.html":{}}}],["mysql",{"_index":184,"title":{},"body":{"dependencies.html":{},"miscellaneous/variables.html":{}}}],["name",{"_index":74,"title":{},"body":{"classes/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["nest",{"_index":122,"title":{},"body":{"controllers/UsersController.html":{},"index.html":{}}}],["nestjs/common",{"_index":23,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/DatabaseModule.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":180,"title":{},"body":{"dependencies.html":{}}}],["nestjs/platform",{"_index":181,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":182,"title":{},"body":{"dependencies.html":{}}}],["new",{"_index":129,"title":{},"body":{"controllers/UsersController.html":{},"coverage.html":{}}}],["node.js",{"_index":204,"title":{},"body":{"index.html":{}}}],["noninfringement",{"_index":306,"title":{},"body":{"license.html":{}}}],["notice",{"_index":291,"title":{},"body":{"license.html":{}}}],["npm",{"_index":224,"title":{},"body":{"index.html":{}}}],["npx",{"_index":238,"title":{},"body":{"index.html":{}}}],["number",{"_index":84,"title":{},"body":{"classes/User.html":{},"controllers/UsersController.html":{}}}],["obtaining",{"_index":264,"title":{},"body":{"license.html":{}}}],["optional",{"_index":113,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["otherwise",{"_index":318,"title":{},"body":{"license.html":{}}}],["out",{"_index":49,"title":{},"body":{"modules/AppModule.html":{},"modules/UsersModule.html":{},"license.html":{},"overview.html":{}}}],["overview",{"_index":328,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["p",{"_index":240,"title":{},"body":{"index.html":{}}}],["package",{"_index":178,"title":{"dependencies.html":{}},"body":{}}],["param",{"_index":114,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["parameters",{"_index":112,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["particular",{"_index":304,"title":{},"body":{"license.html":{}}}],["password",{"_index":75,"title":{},"body":{"classes/User.html":{},"miscellaneous/variables.html":{}}}],["permission",{"_index":258,"title":{},"body":{"license.html":{}}}],["permit",{"_index":284,"title":{},"body":{"license.html":{}}}],["person",{"_index":263,"title":{},"body":{"license.html":{}}}],["persons",{"_index":285,"title":{},"body":{"license.html":{}}}],["port",{"_index":243,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["portions",{"_index":295,"title":{},"body":{"license.html":{}}}],["primarygeneratedcolumn",{"_index":85,"title":{},"body":{"classes/User.html":{}}}],["private",{"_index":154,"title":{},"body":{"injectables/UsersService.html":{}}}],["production",{"_index":233,"title":{},"body":{"index.html":{}}}],["progressive",{"_index":203,"title":{},"body":{"index.html":{}}}],["project",{"_index":223,"title":{},"body":{"index.html":{}}}],["promise",{"_index":18,"title":{},"body":{"controllers/AppController.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["properties",{"_index":69,"title":{},"body":{"classes/User.html":{}}}],["provide",{"_index":337,"title":{},"body":{"miscellaneous/variables.html":{}}}],["provided",{"_index":296,"title":{},"body":{"license.html":{}}}],["providers",{"_index":42,"title":{},"body":{"modules/AppModule.html":{},"modules/DatabaseModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["providers/database.providers",{"_index":65,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["providers/user.providers",{"_index":140,"title":{},"body":{"modules/UsersModule.html":{}}}],["publish",{"_index":278,"title":{},"body":{"license.html":{}}}],["purpose",{"_index":305,"title":{},"body":{"license.html":{}}}],["readonly",{"_index":29,"title":{},"body":{"controllers/AppController.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["reflect",{"_index":186,"title":{},"body":{"dependencies.html":{}}}],["repository",{"_index":146,"title":{},"body":{"injectables/UsersService.html":{},"index.html":{}}}],["res",{"_index":108,"title":{},"body":{"controllers/UsersController.html":{}}}],["res.status(httpstatus.ok).json(result",{"_index":127,"title":{},"body":{"controllers/UsersController.html":{}}}],["reset",{"_index":48,"title":{},"body":{"modules/AppModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["response",{"_index":109,"title":{},"body":{"controllers/UsersController.html":{}}}],["restriction",{"_index":271,"title":{},"body":{"license.html":{}}}],["result",{"_index":32,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/DatabaseModule.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":34,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/DatabaseModule.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":30,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["returns",{"_index":17,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["rights",{"_index":274,"title":{},"body":{"license.html":{}}}],["rimraf",{"_index":189,"title":{},"body":{"dependencies.html":{}}}],["role",{"_index":76,"title":{},"body":{"classes/User.html":{}}}],["root",{"_index":344,"title":{},"body":{"miscellaneous/variables.html":{}}}],["run",{"_index":228,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":191,"title":{},"body":{"dependencies.html":{}}}],["s",{"_index":242,"title":{},"body":{"index.html":{}}}],["scalable",{"_index":208,"title":{},"body":{"index.html":{}}}],["sell",{"_index":282,"title":{},"body":{"license.html":{}}}],["server",{"_index":209,"title":{},"body":{"index.html":{}}}],["service",{"_index":237,"title":{},"body":{"index.html":{}}}],["service/app.service",{"_index":25,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["service/users/users.service",{"_index":118,"title":{},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{}}}],["shall",{"_index":292,"title":{},"body":{"license.html":{}}}],["side",{"_index":210,"title":{},"body":{"index.html":{}}}],["software",{"_index":266,"title":{},"body":{"license.html":{}}}],["source",{"_index":4,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/DatabaseModule.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["src/.../api.ts",{"_index":200,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../database.providers.ts",{"_index":333,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":199,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/.../user.providers.ts",{"_index":334,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/api.ts",{"_index":163,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/app.module.ts",{"_index":50,"title":{},"body":{"modules/AppModule.html":{}}}],["src/controller/app.controller.ts",{"_index":6,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/controller/app.controller.ts:14",{"_index":16,"title":{},"body":{"controllers/AppController.html":{}}}],["src/controller/app.controller.ts:9",{"_index":20,"title":{},"body":{"controllers/AppController.html":{}}}],["src/controller/users/users.controller.ts",{"_index":101,"title":{},"body":{"controllers/UsersController.html":{},"coverage.html":{}}}],["src/controller/users/users.controller.ts:11",{"_index":106,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/controller/users/users.controller.ts:16",{"_index":104,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/controller/users/users.controller.ts:21",{"_index":111,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/entity/user.entity.ts",{"_index":68,"title":{},"body":{"classes/User.html":{},"coverage.html":{}}}],["src/entity/user.entity.ts:10",{"_index":96,"title":{},"body":{"classes/User.html":{}}}],["src/entity/user.entity.ts:13",{"_index":90,"title":{},"body":{"classes/User.html":{}}}],["src/entity/user.entity.ts:16",{"_index":88,"title":{},"body":{"classes/User.html":{}}}],["src/entity/user.entity.ts:19",{"_index":87,"title":{},"body":{"classes/User.html":{}}}],["src/entity/user.entity.ts:22",{"_index":91,"title":{},"body":{"classes/User.html":{}}}],["src/entity/user.entity.ts:26",{"_index":82,"title":{},"body":{"classes/User.html":{}}}],["src/entity/user.entity.ts:30",{"_index":92,"title":{},"body":{"classes/User.html":{}}}],["src/entity/user.entity.ts:34",{"_index":83,"title":{},"body":{"classes/User.html":{}}}],["src/entity/user.entity.ts:37",{"_index":93,"title":{},"body":{"classes/User.html":{}}}],["src/entity/user.entity.ts:7",{"_index":86,"title":{},"body":{"classes/User.html":{}}}],["src/main.ts",{"_index":171,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/modules/database/database.module.ts",{"_index":63,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["src/modules/users/users.module.ts",{"_index":137,"title":{},"body":{"modules/UsersModule.html":{}}}],["src/providers/database.providers.ts",{"_index":173,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/providers/user.providers.ts",{"_index":174,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/service/app.service.ts",{"_index":57,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/service/app.service.ts:5",{"_index":59,"title":{},"body":{"injectables/AppService.html":{}}}],["src/service/users/users.service.ts",{"_index":142,"title":{},"body":{"injectables/UsersService.html":{},"coverage.html":{}}}],["src/service/users/users.service.ts:12",{"_index":149,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/service/users/users.service.ts:16",{"_index":151,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/service/users/users.service.ts:6",{"_index":147,"title":{},"body":{"injectables/UsersService.html":{}}}],["start",{"_index":229,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":232,"title":{},"body":{"index.html":{}}}],["start:proddevelop",{"_index":234,"title":{},"body":{"index.html":{}}}],["started",{"_index":202,"title":{"index.html":{},"license.html":{}},"body":{}}],["starter",{"_index":217,"title":{},"body":{"index.html":{}}}],["statements",{"_index":162,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":130,"title":{},"body":{"controllers/UsersController.html":{}}}],["string",{"_index":21,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/User.html":{},"controllers/UsersController.html":{}}}],["subject",{"_index":287,"title":{},"body":{"license.html":{}}}],["sublicense",{"_index":280,"title":{},"body":{"license.html":{}}}],["substantial",{"_index":294,"title":{},"body":{"license.html":{}}}],["support",{"_index":323,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":324,"title":{},"body":{"modules.html":{}}}],["swagger",{"_index":193,"title":{},"body":{"dependencies.html":{}}}],["synchronize",{"_index":349,"title":{},"body":{"miscellaneous/variables.html":{}}}],["table",{"_index":177,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":176,"title":{},"body":{"coverage.html":{}}}],["test",{"_index":245,"title":{},"body":{"index.html":{}}}],["test:cov",{"_index":250,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":249,"title":{},"body":{"index.html":{}}}],["tests",{"_index":247,"title":{},"body":{"index.html":{}}}],["this.appservice.gethello",{"_index":31,"title":{},"body":{"controllers/AppController.html":{}}}],["this.userrepository.find",{"_index":155,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.userrepository.findone(parseint(id",{"_index":157,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usersservice.findall",{"_index":121,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.finduserbyid(id",{"_index":126,"title":{},"body":{"controllers/UsersController.html":{}}}],["throw",{"_index":128,"title":{},"body":{"controllers/UsersController.html":{}}}],["tort",{"_index":317,"title":{},"body":{"license.html":{}}}],["tp.git",{"_index":222,"title":{},"body":{"index.html":{}}}],["true",{"_index":350,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tsconfig.json",{"_index":241,"title":{},"body":{"index.html":{}}}],["type",{"_index":80,"title":{},"body":{"classes/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["typeorm",{"_index":98,"title":{},"body":{"classes/User.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["typescript",{"_index":216,"title":{},"body":{"index.html":{}}}],["ui",{"_index":194,"title":{},"body":{"dependencies.html":{}}}],["unit",{"_index":246,"title":{},"body":{"index.html":{}}}],["updated_by",{"_index":77,"title":{},"body":{"classes/User.html":{}}}],["updated_time",{"_index":78,"title":{},"body":{"classes/User.html":{}}}],["use",{"_index":275,"title":{},"body":{"license.html":{}}}],["usefactory",{"_index":339,"title":{},"body":{"miscellaneous/variables.html":{}}}],["user",{"_index":66,"title":{"classes/User.html":{}},"body":{"classes/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["user_repository",{"_index":351,"title":{},"body":{"miscellaneous/variables.html":{}}}],["username",{"_index":79,"title":{},"body":{"classes/User.html":{},"miscellaneous/variables.html":{}}}],["userproviders",{"_index":139,"title":{},"body":{"modules/UsersModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["userrepository",{"_index":148,"title":{},"body":{"injectables/UsersService.html":{}}}],["userscontroller",{"_index":100,"title":{"controllers/UsersController.html":{}},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{},"coverage.html":{}}}],["usersmodule",{"_index":46,"title":{"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["usersservice",{"_index":117,"title":{"injectables/UsersService.html":{}},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"overview.html":{}}}],["value",{"_index":336,"title":{},"body":{"miscellaneous/variables.html":{}}}],["variable",{"_index":172,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":332,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["warranties",{"_index":301,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":297,"title":{},"body":{"license.html":{}}}],["watch",{"_index":230,"title":{},"body":{"index.html":{}}}],["whether",{"_index":314,"title":{},"body":{"license.html":{}}}],["without",{"_index":270,"title":{},"body":{"license.html":{}}}],["world",{"_index":61,"title":{},"body":{"injectables/AppService.html":{}}}],["zoom",{"_index":47,"title":{},"body":{"modules/AppModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/controller/app.controller.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                getHelloAll\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findAll\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('query')\n                \n            \n\n            \n                \n                    Defined in src/controller/app.controller.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getHelloAll\n                        \n                        \n                    \n                \n            \n            \n                \ngetHelloAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('test')\n                \n            \n\n            \n                \n                    Defined in src/controller/app.controller.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { AppService } from '../service/app.service';\n\n@Controller('')\nexport class AppController {\n  constructor(private readonly appService: AppService) {}\n\n  @Get('test')\n  getHelloAll(): string {\n    return this.appService.getHello();\n  }\n\n  @Get('query')\n  async findAll(): Promise {\n    return []\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\n\nUsersModule\n\nUsersModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            UsersModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module, HttpModule } from '@nestjs/common';\nimport { AppController } from './controller/app.controller';\nimport { AppService } from './service/app.service';\nimport { UsersModule } from './modules/users/users.module';\n\n@Module({\n  imports: [UsersModule]\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/service/app.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getHello\n                        \n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n            \n                \n                    Defined in src/service/app.service.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  getHello(): string {\n    return 'Hello World!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DatabaseModule.html":{"url":"modules/DatabaseModule.html","title":"module - DatabaseModule","body":"\n                   \n\n\n\n\n    Modules\n    DatabaseModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/database/database.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { databaseProviders } from '../../providers/database.providers';\n\n@Module({\n  providers: [...databaseProviders],\n  exports: [...databaseProviders]\n})\nexport class DatabaseModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/User.html":{"url":"classes/User.html","title":"class - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/entity/user.entity.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                add_by\n                            \n                            \n                                created_time\n                            \n                            \n                                id\n                            \n                            \n                                mobile\n                            \n                            \n                                name\n                            \n                            \n                                password\n                            \n                            \n                                role\n                            \n                            \n                                updated_by\n                            \n                            \n                                updated_time\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            add_by\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/entity/user.entity.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            created_time\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/entity/user.entity.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryGeneratedColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/entity/user.entity.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            mobile\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/entity/user.entity.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/entity/user.entity.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column('text')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/entity/user.entity.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            role\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/entity/user.entity.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updated_by\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/entity/user.entity.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updated_time\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/entity/user.entity.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            username\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({length: 500})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/entity/user.entity.ts:10\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, Column, PrimaryGeneratedColumn } from 'typeorm';\n\n@Entity()\nexport class User {\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  @Column({ length: 500 })\n  username: string;\n\n  @Column('text')\n  password: string;\n\n  @Column()\n  name: string;\n\n  @Column()\n  mobile: string;\n\n  @Column()\n  role: number;\n\n\n  @Column()\n  add_by: string;\n\n\n  @Column()\n  updated_by: string;\n\n\n  @Column()\n  created_time: string;\n\n  @Column()\n  updated_time: string;\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UsersController.html":{"url":"controllers/UsersController.html","title":"controller - UsersController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UsersController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/controller/users/users.controller.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                            \n                                getHelloAll\n                            \n                            \n                                    Async\n                                getUserById\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getHello\n                        \n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('hello')\n                \n            \n\n            \n                \n                    Defined in src/controller/users/users.controller.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getHelloAll\n                        \n                        \n                    \n                \n            \n            \n                \ngetHelloAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('users')\n                \n            \n\n            \n                \n                    Defined in src/controller/users/users.controller.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getUserById\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getUserById(id: number, res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('user/:id')\n                \n            \n\n            \n                \n                    Defined in src/controller/users/users.controller.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Param, Res, HttpStatus, HttpException } from '@nestjs/common';\nimport { UsersService } from \"../../service/users/users.service\";\nimport { User } from '../../entity/user.entity';\nimport { Response } from 'express';\n\n@Controller()\nexport class UsersController {\n  constructor(private readonly usersService: UsersService) {}\n\n  @Get('users')\n  getHelloAll(): Promise {\n    return this.usersService.findAll();\n  }\n\n  @Get('hello')\n  getHello(): string {\n    return 'Hello Nest';\n  }\n\n  @Get('user/:id')\n  async getUserById(@Param('id') id: number, @Res() res: Response) {\n    const result = await this.usersService.findUserById(id);\n    if (result) {\n      return res.status(HttpStatus.OK).json(result);\n    } else {\n      throw new HttpException({\n        status: HttpStatus.INTERNAL_SERVER_ERROR,\n        error: 'Internal Error'\n      }, 500);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UsersModule.html":{"url":"modules/UsersModule.html","title":"module - UsersModule","body":"\n                   \n\n\n\n\n    Modules\n    UsersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_imports\n\n\n\ncluster_UsersModule_providers\n\n\n\n\nDatabaseModule\n\nDatabaseModule\n\n\n\nUsersModule\n\nUsersModule\n\nUsersModule -->\n\nDatabaseModule->UsersModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/users/users.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UsersService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UsersController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            DatabaseModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { DatabaseModule } from '../database/database.module';\nimport { userProviders } from '../../providers/user.providers';\nimport { UsersService } from '../../service/users/users.service';\nimport { UsersController } from \"../../controller/users/users.controller\";\n\n@Module({\n  imports: [DatabaseModule],\n  controllers: [UsersController],\n  providers: [\n    ...userProviders,\n    UsersService,\n  ]\n})\nexport class UsersModule {}\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UsersService.html":{"url":"injectables/UsersService.html","title":"injectable - UsersService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UsersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/service/users/users.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findUserById\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/service/users/users.service.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findAll\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll()\n                \n            \n\n\n            \n                \n                    Defined in src/service/users/users.service.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findUserById\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findUserById(id)\n                \n            \n\n\n            \n                \n                    Defined in src/service/users/users.service.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Inject, Param } from '@nestjs/common';\nimport { Repository } from 'typeorm';\nimport { User } from '../../entity/user.entity';\n\n@Injectable()\nexport class UsersService {\n  constructor(\n    @Inject('USER_REPOSITORY')\n    private readonly userRepository: Repository,\n  ) {}\n\n  async findAll(): Promise {\n    return await this.userRepository.find();\n  }\n\n  async findUserById(@Param('id') id): Promise {\n    return await this.userRepository.findOne(parseInt(id, 10));\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/api.ts\n            \n            function\n            genAPI\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/controller/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/controller/users/users.controller.ts\n            \n            controller\n            UsersController\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/entity/user.entity.ts\n            \n            class\n            User\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            variable\n            module\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/providers/database.providers.ts\n            \n            variable\n            databaseProviders\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/providers/user.providers.ts\n            \n            variable\n            userProviders\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/service/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/service/users/users.service.ts\n            \n            injectable\n            UsersService\n            \n                0 %\n                (0/4)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/common : ^6.5.2\n        \n            @nestjs/core : ^6.5.2\n        \n            @nestjs/platform-express : ^6.5.2\n        \n            @nestjs/swagger : ^3.1.0\n        \n            mysql : ^2.17.1\n        \n            reflect-metadata : ^0.1.12\n        \n            rimraf : ^2.6.2\n        \n            rxjs : ^6.3.3\n        \n            swagger-ui-express : ^4.0.7\n        \n            typeorm : ^0.2.18\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                        \n                            genAPI   (src/.../api.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            bootstrap\n                        \n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    src/api.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            genAPI\n                        \n                        \n                    \n                \n            \n            \n                \ngenAPI()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications, heavily inspired by Angular.\n    \n\n\n\n\n\n\n\n\n\n  \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nInstallation\n$ git clone https://github.com/m1911star/nest-tp.git your-project-name\n$ npm installRunning the app\n# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodDevelop\n# add controller\n$ nest generate controller [name] controller\n\n# add service\n$ nest generate service [name] service\n\n# generate documentation\n$ npx compodoc -p tsconfig.json -s --port 8081\nTest\n# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:cov\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nMIT License\nCopyright (c) 2019 Lee Danny\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DatabaseModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UsersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_imports\n\n\n\ncluster_UsersModule_providers\n\n\n\n\nUsersModule\n\nUsersModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nDatabaseModule\n\nDatabaseModule\n\nUsersModule -->\n\nDatabaseModule->UsersModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        3 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    2 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    2 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    1 Class\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            databaseProviders   (src/.../database.providers.ts)\n                        \n                        \n                            module   (src/.../main.ts)\n                        \n                        \n                            userProviders   (src/.../user.providers.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/providers/database.providers.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            databaseProviders\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n  {\n    provide: 'DATABASE_CONNECTION',\n    useFactory: async () => await createConnection({\n      type: 'mysql',\n      host: 'localhost',\n      port: 3306,\n      username: 'root',\n      password: 'root',\n      database: 'root',\n      entities: [\n          __dirname + '/../**/*.entity{.ts,.js}',\n      ],\n      synchronize: true,\n    }),\n  }\n]\n                        \n                    \n\n\n            \n        \n\n    src/main.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            module\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n\n\n            \n        \n\n    src/providers/user.providers.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            userProviders\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n  {\n    provide: 'USER_REPOSITORY',\n    useFactory: (connection: Connection) => connection.getRepository(User),\n    inject: ['DATABASE_CONNECTION'],\n  },\n]\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
